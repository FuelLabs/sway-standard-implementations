name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  RUST_VERSION: 1.79.0

jobs:
  build-projects:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["src14/owned_proxy/contract"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Init cache
        uses: Swatinem/rust-cache@v2

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.6.0
        with:
          toolchain: latest

      - name: Check Sway formatting
        run: |
          cd ${{ matrix.project }}
          forc fmt --check

      - name: Build Sway
        run: |
          cd ${{ matrix.project }}
          forc build --release --locked

  test-projects:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Init cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt

      - name: Install Fuel toolchain
        uses: FuelLabs/action-fuel-toolchain@v0.6.0
        with:
          toolchain: latest

      - name: Build All Tests Artifacts
        run: forc build --path tests --release

      - name: Check Rust formatting
        run: cargo fmt --manifest-path tests/Cargo.toml --verbose --check

      - name: Check Clippy Linter
        run: cargo clippy --manifest-path tests/Cargo.toml --all-features --all-targets -- -D warnings

      - name: Cargo Test sway-lib
        run: cargo test --manifest-path tests/Cargo.toml

  lint-toml-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-toml-lint
          version: "0.1.1"

      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  check-changelog:
    name: Check Changelog
    runs-on: ubuntu-latest
    steps:
      - uses: tarides/changelog-check-action@v2
        with:
          changelog: CHANGELOG.md

  build-scripts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["src14/owned_proxy/scripts"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Init cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: clippy, rustfmt

      - name: Check Rust formatting
        run: |
          cd ${{ matrix.project }}
          cargo fmt --verbose --check

      - name: Cargo Build scripts
        run: |
          cd ${{ matrix.project }}
          cargo build

      - name: Check Clippy Linter
        run: |
          cd ${{ matrix.project }}
          cargo clippy --all-features --all-targets -- -D warnings
